---
- name: install tomcat on ubuntu
  hosts: all
  become: yes 
  vars_files:
    - vars/tomcat_ubuntu_vars.yaml    
  tasks:
    - name: install java on ubuntu 
      apt:
         name: "{{ java_package }}"
         update_cache: yes 
         state: present
      when: ansible_facts['distribution'] == "Ubuntu"
    - name: add tomcat group
      group:
        name: "{{ username }}"
        state: present 
    - name: add tomcat user
      user:
        name: "{{ username }}"
        home: /opt/tomcat
        group: "{{ username }}"
        shell: /bin/false
        state: present
      when: ansible_facts['distribution'] == "Ubuntu"
    - name: Unzip package is present
      package:
        name: "{{ unzip_package }}"
        state: present
    - name: download tomcat software
      get_url:
        url: "{{ tomcat_download_source }}"
        dest: "{{ tomcat_download_location }}"
      when: ansible_facts['distribution'] == "Ubuntu"
    - name: extract tomcat 
      unarchive:
        src: "/tmp/apache-tomcat-10.1.8.zip"
        dest: "{{ tomcat_install_path }}"
      when: ansible_facts['distribution'] == "Ubuntu"
      notify: 
        - create link
    - name: change permissions
      ansible.builtin.file:
        dest: /opt/tomcat
        recurse: true
        owner: tomcat
        group: tomcat
        state: directory
    - name: add execute permissions to shell files
      ansible.builtin.command: sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'
    - name: Create a systemd unit file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: tomcat
        group: tomcat
    - name: reload daemon and start tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: yes
        enabled: yes
        state: started
    - name: copy the users xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: /opt/tomcat/latest/conf/tomcat-users.xml
        owner: tomcat
        group: tomcat
    - name: copy the manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
        owner: tomcat
        group: tomcat
    - name: copy the host manager app context file
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml
        owner: tomcat
        group: tomcat
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        state: restarted
  handlers:
    - name: create link
      file:
        src: /opt/tomcat/apache-tomcat-10.1.8
        dest: /opt/tomcat/latest
        owner:  "{{ username }}"
        group: "{{ username }}"
        state: link
      


      
          